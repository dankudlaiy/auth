@inherits LayoutComponentBase
@inject CustomAuthStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject CustomAuthStateProvider AuthenticationStateProvider

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4 auth">
            @if (_isAuthenticated)
            {
                <button @onclick="Logout" class="btn btn-info" style="margin-right: 10px">Logout</button>
            }
            else
            {
                <button @onclick="Login" class="btn btn-info" style="margin-right: 10px">Login</button>
            }
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private bool _isAuthenticated;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        _isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
        
        AuthStateProvider.AuthenticationStateChanged += async task => await HandleAuthenticationStateChanged(task);
    }

    private void Login()
    {
        NavigationManager.NavigateTo("/login");
    }

    private async Task Logout()
    {
        await AuthStateProvider.Logout();
        NavigationManager.NavigateTo("/");
    }

    private async Task HandleAuthenticationStateChanged(Task<AuthenticationState> task)
    {
        var authState = await task;
        _isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
        StateHasChanged();
    }
}